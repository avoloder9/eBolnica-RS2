// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eBolnica.Services.Database;

#nullable disable

namespace eBolnica.Services.Migrations
{
    [DbContext(typeof(EBolnicaContext))]
    partial class EBolnicaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eBolnica.Services.Database.Administrator", b =>
                {
                    b.Property<int>("AdministratorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AdministratorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdministratorId"));

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("AdministratorId")
                        .HasName("PK__Administ__ACDEFE3340DDBDC7");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Administrator", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Bolnica", b =>
                {
                    b.Property<int>("BolnicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BolnicaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BolnicaId"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TrenutniBrojHospitalizovanih")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("UkupanBrojKreveta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("UkupanBrojOdjela")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("UkupanBrojSoba")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("BolnicaId")
                        .HasName("PK__Bolnica__CA2F6D62DD0581A2");

                    b.ToTable("Bolnica", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Doktor", b =>
                {
                    b.Property<int>("DoktorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DoktorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoktorId"));

                    b.Property<string>("Biografija")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<int>("OdjelId")
                        .HasColumnType("int")
                        .HasColumnName("OdjelID");

                    b.Property<string>("Specijalizacija")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("DoktorId")
                        .HasName("PK__Doktor__77AFB94100FE69BC");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("OdjelId");

                    b.ToTable("Doktor", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Hospitalizacija", b =>
                {
                    b.Property<int>("HospitalizacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HospitalizacijaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HospitalizacijaId"));

                    b.Property<DateTime?>("DatumOtpusta")
                        .HasColumnType("date");

                    b.Property<DateTime>("DatumPrijema")
                        .HasColumnType("date");

                    b.Property<int>("DoktorId")
                        .HasColumnType("int")
                        .HasColumnName("DoktorID");

                    b.Property<int>("KrevetId")
                        .HasColumnType("int")
                        .HasColumnName("KrevetID");

                    b.Property<int>("MedicinskaDokumentacijaId")
                        .HasColumnType("int")
                        .HasColumnName("MedicinskaDokumentacijaID");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<int>("OdjelId")
                        .HasColumnType("int")
                        .HasColumnName("OdjelID");

                    b.Property<int>("PacijentId")
                        .HasColumnType("int")
                        .HasColumnName("PacijentID");

                    b.Property<int>("SobaId")
                        .HasColumnType("int")
                        .HasColumnName("SobaID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("HospitalizacijaId")
                        .HasName("PK__Hospital__7A4AE91D901D0554");

                    b.HasIndex("DoktorId");

                    b.HasIndex("KrevetId");

                    b.HasIndex("MedicinskaDokumentacijaId");

                    b.HasIndex("OdjelId");

                    b.HasIndex("PacijentId");

                    b.HasIndex("SobaId");

                    b.ToTable("Hospitalizacija", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"));

                    b.Property<DateTime?>("DatumRodjenja")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SlikaThumb")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Spol")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("KorisnikId")
                        .HasName("PK__Korisnik__80B06D612259F9CD");

                    b.ToTable("Korisnik", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Krevet", b =>
                {
                    b.Property<int>("KrevetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KrevetID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KrevetId"));

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<int>("SobaId")
                        .HasColumnType("int")
                        .HasColumnName("SobaID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Zauzet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("KrevetId")
                        .HasName("PK__Krevet__E5B7570439B9EDBB");

                    b.HasIndex("SobaId");

                    b.ToTable("Krevet", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.LaboratorijskiNalaz", b =>
                {
                    b.Property<int>("LaboratorijskiNalazId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LaboratorijskiNalazID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LaboratorijskiNalazId"));

                    b.Property<DateTime>("DatumNalaza")
                        .HasColumnType("date");

                    b.Property<int>("DoktorId")
                        .HasColumnType("int")
                        .HasColumnName("DoktorID");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<int>("PacijentId")
                        .HasColumnType("int")
                        .HasColumnName("PacijentID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("LaboratorijskiNalazId")
                        .HasName("PK__Laborato__79773258792B08E7");

                    b.HasIndex("DoktorId");

                    b.HasIndex("PacijentId");

                    b.ToTable("LaboratorijskiNalaz", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.MedicinskaDokumentacija", b =>
                {
                    b.Property<int>("MedicinskaDokumentacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MedicinskaDokumentacijaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicinskaDokumentacijaId"));

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Hospitalizovan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Napomena")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<int>("PacijentId")
                        .HasColumnType("int")
                        .HasColumnName("PacijentID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("MedicinskaDokumentacijaId")
                        .HasName("PK__Medicins__8FD206224BB5F77C");

                    b.HasIndex("PacijentId");

                    b.ToTable("MedicinskaDokumentacija", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.MedicinskoOsoblje", b =>
                {
                    b.Property<int>("MedicinskoOsobljeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MedicinskoOsobljeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicinskoOsobljeId"));

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<int>("OdjelId")
                        .HasColumnType("int")
                        .HasColumnName("OdjelID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("MedicinskoOsobljeId")
                        .HasName("PK__Medicins__031D4AAD2850DD13");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("OdjelId");

                    b.ToTable("MedicinskoOsoblje", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.NalazParametar", b =>
                {
                    b.Property<int>("NalazParametarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NalazParametarID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NalazParametarId"));

                    b.Property<int>("LaboratorijskiNalazId")
                        .HasColumnType("int")
                        .HasColumnName("LaboratorijskiNalazID");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<int>("ParametarId")
                        .HasColumnType("int")
                        .HasColumnName("ParametarID");

                    b.Property<decimal>("Vrijednost")
                        .HasColumnType("decimal(18, 1)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("NalazParametarId")
                        .HasName("PK__NalazPar__1DEE79CBD19A41B1");

                    b.HasIndex("LaboratorijskiNalazId");

                    b.HasIndex("ParametarId");

                    b.ToTable("NalazParametar", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Odjel", b =>
                {
                    b.Property<int>("OdjelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OdjelID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OdjelId"));

                    b.Property<int>("BolnicaId")
                        .HasColumnType("int")
                        .HasColumnName("BolnicaID");

                    b.Property<int?>("BrojKreveta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("BrojSlobodnihKreveta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("BrojSoba")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("GlavniDoktorId")
                        .HasColumnType("int")
                        .HasColumnName("GlavniDoktorID");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("OdjelId")
                        .HasName("PK__Odjel__FAE1DA5135ABB2F0");

                    b.HasIndex("BolnicaId");

                    b.HasIndex("GlavniDoktorId");

                    b.ToTable("Odjel", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Operacija", b =>
                {
                    b.Property<int>("OperacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperacijaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperacijaId"));

                    b.Property<DateTime>("DatumOperacije")
                        .HasColumnType("datetime");

                    b.Property<int>("DoktorId")
                        .HasColumnType("int")
                        .HasColumnName("DoktorID");

                    b.Property<string>("Komentar")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<int>("PacijentId")
                        .HasColumnType("int")
                        .HasColumnName("PacijentID");

                    b.Property<string>("StateMachine")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TerapijaId")
                        .HasColumnType("int")
                        .HasColumnName("TerapijaID");

                    b.Property<string>("TipOperacije")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("OperacijaId")
                        .HasName("PK__Operacij__D0550FAF9FA3E18A");

                    b.HasIndex("DoktorId");

                    b.HasIndex("PacijentId");

                    b.HasIndex("TerapijaId");

                    b.ToTable("Operacija", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.OtpusnoPismo", b =>
                {
                    b.Property<int>("OtpusnoPismoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OtpusnoPismoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtpusnoPismoId"));

                    b.Property<string>("Anamneza")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Dijagnoza")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int?>("HospitalizacijaId")
                        .HasColumnType("int")
                        .HasColumnName("HospitalizacijaID");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<int?>("TerapijaId")
                        .HasColumnType("int")
                        .HasColumnName("TerapijaID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Zakljucak")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("OtpusnoPismoId")
                        .HasName("PK__OtpusnoP__3A85962A9D508918");

                    b.HasIndex("HospitalizacijaId");

                    b.HasIndex("TerapijaId");

                    b.ToTable("OtpusnoPismo", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Pacijent", b =>
                {
                    b.Property<int>("PacijentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PacijentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PacijentId"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BrojZdravstveneKartice")
                        .HasColumnType("int");

                    b.Property<int>("Dob")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("PacijentId")
                        .HasName("PK__Pacijent__7471C17DA3E8384D");

                    b.HasIndex("KorisnikId");

                    b.HasIndex(new[] { "BrojZdravstveneKartice" }, "UQ__Pacijent__955F4C606A8B01D1")
                        .IsUnique();

                    b.ToTable("Pacijent", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Parametar", b =>
                {
                    b.Property<int>("ParametarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ParametarID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParametarId"));

                    b.Property<decimal>("MaxVrijednost")
                        .HasColumnType("decimal(18, 1)");

                    b.Property<decimal>("MinVrijednost")
                        .HasColumnType("decimal(18, 1)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("ParametarId")
                        .HasName("PK__Parameta__5D50EB242EB9ECB4");

                    b.ToTable("Parametar", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Pregled", b =>
                {
                    b.Property<int>("PregledId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PregledID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PregledId"));

                    b.Property<string>("Anamneza")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("GlavnaDijagnoza")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("MedicinskaDokumentacijaId")
                        .HasColumnType("int")
                        .HasColumnName("MedicinskaDokumentacijaID");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<int>("UputnicaId")
                        .HasColumnType("int")
                        .HasColumnName("UputnicaID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Zakljucak")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("PregledId")
                        .HasName("PK__Pregled__4A8CB6B49155168A");

                    b.HasIndex("MedicinskaDokumentacijaId");

                    b.HasIndex("UputnicaId");

                    b.ToTable("Pregled", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.RadniSati", b =>
                {
                    b.Property<int>("RadniSatiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RadniSatiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RadniSatiId"));

                    b.Property<int>("MedicinskoOsobljeId")
                        .HasColumnType("int")
                        .HasColumnName("MedicinskoOsobljeID");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<int>("RasporedSmjenaId")
                        .HasColumnType("int")
                        .HasColumnName("RasporedSmjenaID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("VrijemeDolaska")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("VrijemeOdlaska")
                        .HasColumnType("time");

                    b.HasKey("RadniSatiId")
                        .HasName("PK__RadniSat__A39115B27B008C08");

                    b.HasIndex("MedicinskoOsobljeId");

                    b.HasIndex("RasporedSmjenaId");

                    b.ToTable("RadniSati", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.RadniZadatak", b =>
                {
                    b.Property<int>("RadniZadatakId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RadniZadatakID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RadniZadatakId"));

                    b.Property<DateTime>("DatumZadatka")
                        .HasColumnType("datetime");

                    b.Property<int>("DoktorId")
                        .HasColumnType("int")
                        .HasColumnName("DoktorID");

                    b.Property<int>("MedicinskoOsobljeId")
                        .HasColumnType("int")
                        .HasColumnName("MedicinskoOsobljeID");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PacijentId")
                        .HasColumnType("int")
                        .HasColumnName("PacijentID");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("RadniZadatakId")
                        .HasName("PK__RadniZad__9E5314D03ED4289A");

                    b.HasIndex("DoktorId");

                    b.HasIndex("MedicinskoOsobljeId");

                    b.HasIndex("PacijentId");

                    b.ToTable("RadniZadatak", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.RasporedSmjena", b =>
                {
                    b.Property<int>("RasporedSmjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RasporedSmjenaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RasporedSmjenaId"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("date");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<int>("SmjenaId")
                        .HasColumnType("int")
                        .HasColumnName("SmjenaID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("RasporedSmjenaId")
                        .HasName("PK__Raspored__6199E6F435135DAA");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("SmjenaId");

                    b.ToTable("RasporedSmjena", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.SlobodniDan", b =>
                {
                    b.Property<int>("SlobodniDanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SlobodniDanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlobodniDanId"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("date");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<string>("Razlog")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("SlobodniDanId")
                        .HasName("PK__Slobodni__DF3081FE823DEE18");

                    b.HasIndex("KorisnikId");

                    b.ToTable("SlobodniDan", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Smjena", b =>
                {
                    b.Property<int>("SmjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SmjenaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SmjenaId"));

                    b.Property<string>("NazivSmjene")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("VrijemePocetka")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("VrijemeZavrsetka")
                        .HasColumnType("time");

                    b.HasKey("SmjenaId")
                        .HasName("PK__Smjena__26491D9B332B0CE1");

                    b.ToTable("Smjena", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Soba", b =>
                {
                    b.Property<int>("SobaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SobaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SobaId"));

                    b.Property<int?>("BrojKreveta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<int>("OdjelId")
                        .HasColumnType("int")
                        .HasColumnName("OdjelID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Zauzeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("SobaId")
                        .HasName("PK__Soba__0CDF0AEE2D50BDC6");

                    b.HasIndex("OdjelId");

                    b.ToTable("Soba", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Terapija", b =>
                {
                    b.Property<int>("TerapijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TerapijaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerapijaId"));

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("date");

                    b.Property<DateTime>("DatumZavrsetka")
                        .HasColumnType("date");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("PregledId")
                        .HasColumnType("int")
                        .HasColumnName("PregledID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("TerapijaId")
                        .HasName("PK__Terapija__0EA553B6B8C13B9F");

                    b.HasIndex("PregledId");

                    b.ToTable("Terapija", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Termin", b =>
                {
                    b.Property<int>("TerminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TerminID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerminId"));

                    b.Property<DateTime>("DatumTermina")
                        .HasColumnType("date");

                    b.Property<int>("DoktorId")
                        .HasColumnType("int")
                        .HasColumnName("DoktorID");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<int>("OdjelId")
                        .HasColumnType("int")
                        .HasColumnName("OdjelID");

                    b.Property<bool?>("Otkazano")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("PacijentId")
                        .HasColumnType("int")
                        .HasColumnName("PacijentID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("VrijemeTermina")
                        .HasColumnType("time");

                    b.HasKey("TerminId")
                        .HasName("PK__Termin__42126CB546F72509");

                    b.HasIndex("DoktorId");

                    b.HasIndex("OdjelId");

                    b.HasIndex("PacijentId");

                    b.ToTable("Termin", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Uputnica", b =>
                {
                    b.Property<int>("UputnicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UputnicaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UputnicaId"));

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<string>("StateMachine")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TerminId")
                        .HasColumnType("int")
                        .HasColumnName("TerminID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("UputnicaId")
                        .HasName("PK__Uputnica__B7A9182EABA65D87");

                    b.HasIndex("TerminId");

                    b.ToTable("Uputnica", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.VitalniParametri", b =>
                {
                    b.Property<int>("VitalniParametarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VitalniParametarID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VitalniParametarId"));

                    b.Property<DateTime>("DatumMjerenja")
                        .HasColumnType("date");

                    b.Property<bool>("Obrisano")
                        .HasColumnType("bit");

                    b.Property<int>("OtkucajSrca")
                        .HasColumnType("int");

                    b.Property<int>("PacijentId")
                        .HasColumnType("int")
                        .HasColumnName("PacijentID");

                    b.Property<int>("Saturacija")
                        .HasColumnType("int");

                    b.Property<decimal>("Secer")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("VrijemeMjerenja")
                        .HasColumnType("time");

                    b.HasKey("VitalniParametarId")
                        .HasName("PK__VitalniP__5D42790C8B61FD1B");

                    b.HasIndex("PacijentId");

                    b.ToTable("VitalniParametri", (string)null);
                });

            modelBuilder.Entity("eBolnica.Services.Database.Administrator", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Administrators")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK_Administrator_Korisnik");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Doktor", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Doktors")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK_Doktor_Korisnik");

                    b.HasOne("eBolnica.Services.Database.Odjel", "Odjel")
                        .WithMany("Doktors")
                        .HasForeignKey("OdjelId")
                        .IsRequired()
                        .HasConstraintName("FK_Doktor_Odjel");

                    b.Navigation("Korisnik");

                    b.Navigation("Odjel");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Hospitalizacija", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Doktor", "Doktor")
                        .WithMany("Hospitalizacijas")
                        .HasForeignKey("DoktorId")
                        .IsRequired()
                        .HasConstraintName("FK_Hospitalizacija_Doktor");

                    b.HasOne("eBolnica.Services.Database.Krevet", "Krevet")
                        .WithMany("Hospitalizacijas")
                        .HasForeignKey("KrevetId")
                        .IsRequired()
                        .HasConstraintName("FK_Hospitalizacija_Krevet");

                    b.HasOne("eBolnica.Services.Database.MedicinskaDokumentacija", "MedicinskaDokumentacija")
                        .WithMany("Hospitalizacijas")
                        .HasForeignKey("MedicinskaDokumentacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Hospitali__Medic__5224328E");

                    b.HasOne("eBolnica.Services.Database.Odjel", "Odjel")
                        .WithMany("Hospitalizacijas")
                        .HasForeignKey("OdjelId")
                        .IsRequired()
                        .HasConstraintName("FK_Hospitalizacija_Odjel");

                    b.HasOne("eBolnica.Services.Database.Pacijent", "Pacijent")
                        .WithMany("Hospitalizacijas")
                        .HasForeignKey("PacijentId")
                        .IsRequired()
                        .HasConstraintName("FK_Hospitalizacija_Pacijent");

                    b.HasOne("eBolnica.Services.Database.Soba", "Soba")
                        .WithMany("Hospitalizacijas")
                        .HasForeignKey("SobaId")
                        .IsRequired()
                        .HasConstraintName("FK_Hospitalizacija_Soba");

                    b.Navigation("Doktor");

                    b.Navigation("Krevet");

                    b.Navigation("MedicinskaDokumentacija");

                    b.Navigation("Odjel");

                    b.Navigation("Pacijent");

                    b.Navigation("Soba");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Krevet", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Soba", "Soba")
                        .WithMany("Krevets")
                        .HasForeignKey("SobaId")
                        .IsRequired()
                        .HasConstraintName("FK_Krevet_Soba");

                    b.Navigation("Soba");
                });

            modelBuilder.Entity("eBolnica.Services.Database.LaboratorijskiNalaz", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Doktor", "Doktor")
                        .WithMany("LaboratorijskiNalazs")
                        .HasForeignKey("DoktorId")
                        .IsRequired()
                        .HasConstraintName("FK_LaboratorijskiNalaz_Doktor");

                    b.HasOne("eBolnica.Services.Database.Pacijent", "Pacijent")
                        .WithMany("LaboratorijskiNalazs")
                        .HasForeignKey("PacijentId")
                        .IsRequired()
                        .HasConstraintName("FK_LaboratorijskiNalaz_Pacijent");

                    b.Navigation("Doktor");

                    b.Navigation("Pacijent");
                });

            modelBuilder.Entity("eBolnica.Services.Database.MedicinskaDokumentacija", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Pacijent", "Pacijent")
                        .WithMany("MedicinskaDokumentacijas")
                        .HasForeignKey("PacijentId")
                        .IsRequired()
                        .HasConstraintName("FK_MedicinskaDokumentacija_Pacijent");

                    b.Navigation("Pacijent");
                });

            modelBuilder.Entity("eBolnica.Services.Database.MedicinskoOsoblje", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Korisnik", "Korisnik")
                        .WithMany("MedicinskoOsobljes")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK_MedicinskoOsoblje_Korisnik");

                    b.HasOne("eBolnica.Services.Database.Odjel", "Odjel")
                        .WithMany("MedicinskoOsobljes")
                        .HasForeignKey("OdjelId")
                        .IsRequired()
                        .HasConstraintName("FK_MedicinskoOsoblje_Odjel");

                    b.Navigation("Korisnik");

                    b.Navigation("Odjel");
                });

            modelBuilder.Entity("eBolnica.Services.Database.NalazParametar", b =>
                {
                    b.HasOne("eBolnica.Services.Database.LaboratorijskiNalaz", "LaboratorijskiNalaz")
                        .WithMany("NalazParametars")
                        .HasForeignKey("LaboratorijskiNalazId")
                        .IsRequired()
                        .HasConstraintName("FK_NalazParametar_LaboratorijskiNalaz");

                    b.HasOne("eBolnica.Services.Database.Parametar", "Parametar")
                        .WithMany("NalazParametars")
                        .HasForeignKey("ParametarId")
                        .IsRequired()
                        .HasConstraintName("FK_NalazParametar_Parametar");

                    b.Navigation("LaboratorijskiNalaz");

                    b.Navigation("Parametar");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Odjel", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Bolnica", "Bolnica")
                        .WithMany("Odjels")
                        .HasForeignKey("BolnicaId")
                        .IsRequired()
                        .HasConstraintName("FK_Odjel_Bolnica");

                    b.HasOne("eBolnica.Services.Database.Doktor", "GlavniDoktor")
                        .WithMany("Odjels")
                        .HasForeignKey("GlavniDoktorId")
                        .HasConstraintName("FK_Odjel_Doktor");

                    b.Navigation("Bolnica");

                    b.Navigation("GlavniDoktor");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Operacija", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Doktor", "Doktor")
                        .WithMany("Operacijas")
                        .HasForeignKey("DoktorId")
                        .IsRequired()
                        .HasConstraintName("FK_Operacija_Doktor");

                    b.HasOne("eBolnica.Services.Database.Pacijent", "Pacijent")
                        .WithMany("Operacijas")
                        .HasForeignKey("PacijentId")
                        .IsRequired()
                        .HasConstraintName("FK_Operacija_Pacijent");

                    b.HasOne("eBolnica.Services.Database.Terapija", "Terapija")
                        .WithMany("Operacijas")
                        .HasForeignKey("TerapijaId")
                        .HasConstraintName("FK_Operacija_Terapija");

                    b.Navigation("Doktor");

                    b.Navigation("Pacijent");

                    b.Navigation("Terapija");
                });

            modelBuilder.Entity("eBolnica.Services.Database.OtpusnoPismo", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Hospitalizacija", "Hospitalizacija")
                        .WithMany("OtpusnoPismos")
                        .HasForeignKey("HospitalizacijaId")
                        .HasConstraintName("FK__OtpusnoPi__Hospi__4F47C5E3");

                    b.HasOne("eBolnica.Services.Database.Terapija", "Terapija")
                        .WithMany("OtpusnoPismos")
                        .HasForeignKey("TerapijaId")
                        .HasConstraintName("FK__OtpusnoPi__Terap__503BEA1C");

                    b.Navigation("Hospitalizacija");

                    b.Navigation("Terapija");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Pacijent", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Pacijents")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK_Pacijent_Korisnik");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Pregled", b =>
                {
                    b.HasOne("eBolnica.Services.Database.MedicinskaDokumentacija", "MedicinskaDokumentacija")
                        .WithMany("Pregleds")
                        .HasForeignKey("MedicinskaDokumentacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Pregled__Medicin__51300E55");

                    b.HasOne("eBolnica.Services.Database.Uputnica", "Uputnica")
                        .WithMany("Pregleds")
                        .HasForeignKey("UputnicaId")
                        .IsRequired()
                        .HasConstraintName("FK_Pregled_Uputnica");

                    b.Navigation("MedicinskaDokumentacija");

                    b.Navigation("Uputnica");
                });

            modelBuilder.Entity("eBolnica.Services.Database.RadniSati", b =>
                {
                    b.HasOne("eBolnica.Services.Database.MedicinskoOsoblje", "MedicinskoOsoblje")
                        .WithMany("RadniSatis")
                        .HasForeignKey("MedicinskoOsobljeId")
                        .IsRequired()
                        .HasConstraintName("FK_RadniSati_MedicinskoOsoblje");

                    b.HasOne("eBolnica.Services.Database.RasporedSmjena", "RasporedSmjena")
                        .WithMany("RadniSatis")
                        .HasForeignKey("RasporedSmjenaId")
                        .IsRequired()
                        .HasConstraintName("FK_RadniSati_RasporedSmjena");

                    b.Navigation("MedicinskoOsoblje");

                    b.Navigation("RasporedSmjena");
                });

            modelBuilder.Entity("eBolnica.Services.Database.RadniZadatak", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Doktor", "Doktor")
                        .WithMany("RadniZadataks")
                        .HasForeignKey("DoktorId")
                        .IsRequired()
                        .HasConstraintName("FK_RadniZadatak_Doktor");

                    b.HasOne("eBolnica.Services.Database.MedicinskoOsoblje", "MedicinskoOsoblje")
                        .WithMany("RadniZadataks")
                        .HasForeignKey("MedicinskoOsobljeId")
                        .IsRequired()
                        .HasConstraintName("FK_RadniZadatak_MedicinskoOsoblje");

                    b.HasOne("eBolnica.Services.Database.Pacijent", "Pacijent")
                        .WithMany("RadniZadataks")
                        .HasForeignKey("PacijentId")
                        .IsRequired()
                        .HasConstraintName("FK_RadniZadatak_Pacijent");

                    b.Navigation("Doktor");

                    b.Navigation("MedicinskoOsoblje");

                    b.Navigation("Pacijent");
                });

            modelBuilder.Entity("eBolnica.Services.Database.RasporedSmjena", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Korisnik", "Korisnik")
                        .WithMany("RasporedSmjenas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK_RasporedSmjena_Korisnik");

                    b.HasOne("eBolnica.Services.Database.Smjena", "Smjena")
                        .WithMany("RasporedSmjenas")
                        .HasForeignKey("SmjenaId")
                        .IsRequired()
                        .HasConstraintName("FK_RasporedSmjena_Smjena");

                    b.Navigation("Korisnik");

                    b.Navigation("Smjena");
                });

            modelBuilder.Entity("eBolnica.Services.Database.SlobodniDan", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Korisnik", "Korisnik")
                        .WithMany("SlobodniDans")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK_SlobodniDan_Korisnik");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Soba", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Odjel", "Odjel")
                        .WithMany("Sobas")
                        .HasForeignKey("OdjelId")
                        .IsRequired()
                        .HasConstraintName("FK_Soba_Odjel");

                    b.Navigation("Odjel");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Terapija", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Pregled", "Pregled")
                        .WithMany("Terapijas")
                        .HasForeignKey("PregledId")
                        .HasConstraintName("Terapija_Pregled");

                    b.Navigation("Pregled");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Termin", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Doktor", "Doktor")
                        .WithMany("Termins")
                        .HasForeignKey("DoktorId")
                        .IsRequired()
                        .HasConstraintName("FK_Termin_Doktor");

                    b.HasOne("eBolnica.Services.Database.Odjel", "Odjel")
                        .WithMany("Termins")
                        .HasForeignKey("OdjelId")
                        .IsRequired()
                        .HasConstraintName("FK_Termin_Odjel");

                    b.HasOne("eBolnica.Services.Database.Pacijent", "Pacijent")
                        .WithMany("Termins")
                        .HasForeignKey("PacijentId")
                        .IsRequired()
                        .HasConstraintName("FK_Termin_Pacijent");

                    b.Navigation("Doktor");

                    b.Navigation("Odjel");

                    b.Navigation("Pacijent");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Uputnica", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Termin", "Termin")
                        .WithMany("Uputnicas")
                        .HasForeignKey("TerminId")
                        .IsRequired()
                        .HasConstraintName("FK_Uputnica_Termin");

                    b.Navigation("Termin");
                });

            modelBuilder.Entity("eBolnica.Services.Database.VitalniParametri", b =>
                {
                    b.HasOne("eBolnica.Services.Database.Pacijent", "Pacijent")
                        .WithMany("VitalniParametris")
                        .HasForeignKey("PacijentId")
                        .IsRequired()
                        .HasConstraintName("FK_VitalniParametri_Pacijent");

                    b.Navigation("Pacijent");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Bolnica", b =>
                {
                    b.Navigation("Odjels");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Doktor", b =>
                {
                    b.Navigation("Hospitalizacijas");

                    b.Navigation("LaboratorijskiNalazs");

                    b.Navigation("Odjels");

                    b.Navigation("Operacijas");

                    b.Navigation("RadniZadataks");

                    b.Navigation("Termins");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Hospitalizacija", b =>
                {
                    b.Navigation("OtpusnoPismos");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Korisnik", b =>
                {
                    b.Navigation("Administrators");

                    b.Navigation("Doktors");

                    b.Navigation("MedicinskoOsobljes");

                    b.Navigation("Pacijents");

                    b.Navigation("RasporedSmjenas");

                    b.Navigation("SlobodniDans");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Krevet", b =>
                {
                    b.Navigation("Hospitalizacijas");
                });

            modelBuilder.Entity("eBolnica.Services.Database.LaboratorijskiNalaz", b =>
                {
                    b.Navigation("NalazParametars");
                });

            modelBuilder.Entity("eBolnica.Services.Database.MedicinskaDokumentacija", b =>
                {
                    b.Navigation("Hospitalizacijas");

                    b.Navigation("Pregleds");
                });

            modelBuilder.Entity("eBolnica.Services.Database.MedicinskoOsoblje", b =>
                {
                    b.Navigation("RadniSatis");

                    b.Navigation("RadniZadataks");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Odjel", b =>
                {
                    b.Navigation("Doktors");

                    b.Navigation("Hospitalizacijas");

                    b.Navigation("MedicinskoOsobljes");

                    b.Navigation("Sobas");

                    b.Navigation("Termins");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Pacijent", b =>
                {
                    b.Navigation("Hospitalizacijas");

                    b.Navigation("LaboratorijskiNalazs");

                    b.Navigation("MedicinskaDokumentacijas");

                    b.Navigation("Operacijas");

                    b.Navigation("RadniZadataks");

                    b.Navigation("Termins");

                    b.Navigation("VitalniParametris");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Parametar", b =>
                {
                    b.Navigation("NalazParametars");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Pregled", b =>
                {
                    b.Navigation("Terapijas");
                });

            modelBuilder.Entity("eBolnica.Services.Database.RasporedSmjena", b =>
                {
                    b.Navigation("RadniSatis");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Smjena", b =>
                {
                    b.Navigation("RasporedSmjenas");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Soba", b =>
                {
                    b.Navigation("Hospitalizacijas");

                    b.Navigation("Krevets");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Terapija", b =>
                {
                    b.Navigation("Operacijas");

                    b.Navigation("OtpusnoPismos");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Termin", b =>
                {
                    b.Navigation("Uputnicas");
                });

            modelBuilder.Entity("eBolnica.Services.Database.Uputnica", b =>
                {
                    b.Navigation("Pregleds");
                });
#pragma warning restore 612, 618
        }
    }
}
